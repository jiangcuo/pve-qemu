diff --git a/hw/core/machine-qmp-cmds.c b/hw/core/machine-qmp-cmds.c
index 314351cdff..628a3537c5 100644
--- a/hw/core/machine-qmp-cmds.c
+++ b/hw/core/machine-qmp-cmds.c
@@ -94,6 +94,11 @@ MachineInfoList *qmp_query_machines(Error **errp)
         if (strcmp(mc->name, MACHINE_GET_CLASS(current_machine)->name) == 0) {
             info->has_is_current = true;
             info->is_current = true;
+
+            // PVE version string only exists for current machine
+            if (mc->pve_version) {
+                info->pve_version = g_strdup(mc->pve_version);
+            }
         }
 
         if (mc->default_cpu_type) {
diff -Nur qemu/include/hw/boards.h qemu2/include/hw/boards.h
--- qemu/include/hw/boards.h	2024-11-15 15:55:23.141158660 +0800
+++ qemu2/include/hw/boards.h	2024-11-16 19:01:46.928760140 +0800
@@ -268,6 +268,8 @@
     const char *desc;
     const char *deprecation_reason;
 
+    const char *pve_version;
+
     void (*init)(MachineState *state);
     void (*reset)(MachineState *state, ResetType type);
     void (*wakeup)(MachineState *state);
diff -Nur qemu/qapi/machine.json qemu2/qapi/machine.json
--- qemu/qapi/machine.json	2024-11-15 15:55:24.541158660 +0800
+++ qemu2/qapi/machine.json	2024-11-16 19:01:46.932760140 +0800
@@ -187,6 +187,8 @@
 #
 # @acpi: machine type supports ACPI (since 8.0)
 #
+# @pve-version: custom PVE version suffix specified as 'machine+pveN'
+#
 # @compat-props: The machine type's compatibility properties.  Only
 #     present when query-machines argument @compat-props is true.
 #     (since 9.1)
@@ -202,7 +204,7 @@
             '*is-default': 'bool', 'cpu-max': 'int',
             'hotpluggable-cpus': 'bool',  'numa-mem-supported': 'bool',
             'deprecated': 'bool', '*default-cpu-type': 'str',
-            '*default-ram-id': 'str', 'acpi': 'bool',
+            '*default-ram-id': 'str', 'acpi': 'bool', '*pve-version': 'str',
             '*compat-props': { 'type': ['CompatProperty'],
                                'features': ['unstable'] } } }
 
diff -Nur qemu/system/vl.c qemu2/system/vl.c
--- qemu/system/vl.c	2024-11-15 15:55:57.573158660 +0800
+++ qemu2/system/vl.c	2024-11-16 19:03:44.776760140 +0800
@@ -1674,6 +1674,7 @@
 {
     ERRP_GUARD();
     const char *machine_type = qdict_get_try_str(qdict, "type");
+    const char *pvever = qdict_get_try_str(qdict, "pvever");
     g_autoptr(GSList) machines = object_class_get_list(TYPE_MACHINE, false);
     MachineClass *machine_class = NULL;
 
@@ -1690,6 +1691,11 @@
         }
     }
 
+    if (machine_class && pvever) {
+       machine_class->pve_version = g_strdup(pvever);
+       qdict_del(qdict, "pvever");
+    }
+
     if (!machine_class) {
         error_append_hint(errp,
                           "Use -machine help to list supported machines\n");
@@ -3308,12 +3314,29 @@
             case QEMU_OPTION_machine:
                 {
                     bool help;
-
+                    size_t pvever_index, name_len;
+                    const gchar *name;
+                    gchar *name_clean, *pvever;
                     keyval_parse_into(machine_opts_dict, optarg, "type", &help, &error_fatal);
                     if (help) {
                         machine_help_func(machine_opts_dict);
                         exit(EXIT_SUCCESS);
                     }
+                    // PVE version is specified with '+' as seperator, e.g. pc-i440fx+pvever
+                    name = qdict_get_try_str(machine_opts_dict, "type");
+                    if (name != NULL) {
+                        name_len = strlen(name);
+                        pvever_index = strcspn(name, "+");
+                        if (pvever_index < name_len) {
+                            name_clean = g_strndup(name, pvever_index);
+                            pvever = g_strndup(name + pvever_index + 1, name_len - pvever_index - 1);
+                            qdict_put_str(machine_opts_dict, "pvever", pvever);
+                            qdict_put_str(machine_opts_dict, "type", name_clean);
+                            g_free(name_clean);
+                            g_free(pvever);
+                        }
+                    }
+
                     break;
                 }
             case QEMU_OPTION_accel:
